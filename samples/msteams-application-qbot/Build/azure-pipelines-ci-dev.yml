trigger:
  branches:
    include: 
      - dev

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: ComponentGovernanceComponentDetection@0
    displayName: Component Governance
    inputs:
      scanType: 'Register'
      verbosity: 'Verbose'
      alertWarningLevel: 'High'
  - task: NodeTool@0
    inputs:
      versionSpec: '15.6.x'
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '3.1.x'
  - task: DotNetCoreCLI@2
    inputs:
      command: 'publish'
      publishWebProjects: true
      arguments: '--configuration=Release --output $(Build.ArtifactStagingDirectory)'
  - task: DotNetCoreCLI@2
    inputs:
      command: custom
      custom: 'tool'
      arguments: 'install --global dotnet-ef'
  - task: DotNetCoreCLI@2
    inputs:
      command: 'custom'
      custom: 'ef'
      workingDirectory: "$(Build.SourcesDirectory)/Source/Microsoft.Teams.Apps.QBot.Infrastructure"
      publishWebProjects: true
      arguments: 'migrations script -i -o $(Build.ArtifactStagingDirectory)/migrations.sql'
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'Deployment/'
      Contents: 'azuredeploy.json'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: "Publish App artifact"
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'qbot'
      publishLocation: 'Container'